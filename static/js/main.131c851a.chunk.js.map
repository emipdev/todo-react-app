{"version":3,"sources":["components/Nav.jsx","components/Todo.jsx","store/actions/index.js","components/ToDos.jsx","components/AddTodo.jsx","components/TodoDetail.jsx","App.js","store/reducer/index.js","store/index.js","index.js"],"names":["Nav","className","to","Todo","thing","newId","removeTodo","data","type","payload","connect","state","todos","status","map","todo","onClick","id","addTodo","useState","description","date","setData","handleChange","e","target","name","value","onSubmit","preventDefault","required","onChange","toTodo","console","log","toDone","toInProgress","useParams","filter","Number","App","exact","path","initialState","store","createStore","action","x","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,IACpB,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,OAAT,yB,mBCLG,SAASC,EAAT,GAAuB,IAARC,EAAO,EAAPA,MAC1B,OACI,8BACKA,ICJb,IAAIC,EAAQ,EAYCC,EAAa,SAACC,GACvB,MAAQ,CACJC,KAAM,aACNC,QAASF,ICiBFG,mBANf,SAAyBC,GACrB,MAAO,CACHC,MAAOD,KAIwB,CAACL,cAAzBI,EA3Bf,YAA0C,IAA1BG,EAAyB,EAAzBA,OAAOD,EAAkB,EAAlBA,MAAMN,EAAY,EAAZA,WACzB,OACI,sBAAKL,UAAU,QAAf,UACI,+BAAOY,IACND,EAAME,KAAI,SAAAC,GACP,OAAGA,EAAKF,SAAWA,EAEX,sBAAKZ,UAAU,OAAf,UACI,wBAAQe,QAAS,kBAAMV,EAAWS,EAAKE,KAAvC,eACA,cAAC,IAAD,CAAMf,GAAE,gBAAWa,EAAKE,IAAxB,SACI,cAACd,EAAD,eAAUY,QAHSA,EAAKE,IAQjC,c,gBCqBRP,kBAAQ,KAAK,CAACQ,QFvCN,SAACX,GACpB,MAAQ,CACJC,KAAM,UACNC,QAAQ,2BACDF,GADA,IAEHM,OAAQ,OACRI,GAAIZ,SEiCDK,EArCf,YAA4B,IAAVQ,EAAS,EAATA,QACd,EAAuBC,mBAAS,CAC5Bf,MAAO,GACPgB,YAAa,GACbC,KAAM,KAHV,mBAAOd,EAAP,KAAYe,EAAZ,KAKMC,EAAe,SAACC,GAClBF,EAAQ,2BACDf,GADA,kBAEFiB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAalC,OACI,qBAAK1B,UAAU,MAAf,SACI,uBAAM2B,SAZO,SAACJ,GAClBA,EAAEK,iBACFX,EAAQX,GACRe,EAAQ,CACJlB,MAAO,GACPgB,YAAa,GACbC,KAAM,MAMN,UACI,0CACA,uBAAOS,UAAQ,EAACJ,KAAK,QAAQC,MAAOpB,EAAKH,MAAO2B,SAAUR,IAC1D,gDACA,0BAAUG,KAAK,cAAcC,MAAOpB,EAAKa,YAAaW,SAAUR,IAChE,yCACA,uBAAOG,KAAK,OAAOC,MAAOpB,EAAKc,KAAMU,SAAUR,IAC/C,wBAAQf,KAAK,SAAb,yB,OCADE,mBANf,SAAyBC,GACrB,MAAQ,CACJC,MAAOD,KAIwB,CAACqB,OHLlB,SAACzB,GAEnB,OADA0B,QAAQC,WAAW3B,GACX,CACJC,KAAM,SACNC,QAASF,IGC8B4B,OHXzB,SAAC5B,GACnB,MAAQ,CACJC,KAAM,SACNC,QAASF,IGQqC6B,aHjB1B,SAAC7B,GACzB,MAAQ,CACJC,KAAM,eACNC,QAASF,IGckDD,cAApDI,EA/Bf,YAAmE,IAA9CE,EAA6C,EAA7CA,MAAMoB,EAAuC,EAAvCA,OAAOG,EAAgC,EAAhCA,OAAOC,EAAyB,EAAzBA,aAAa9B,EAAY,EAAZA,WAC7CW,EAAMoB,cAANpB,GACL,EAAaL,EAAM0B,QAAO,SAAAvB,GAAI,OAAIA,EAAKE,KAAOsB,OAAOtB,MAAhDF,EAAL,oBACA,OAAGA,EAEK,sBAAKd,UAAU,UAAf,UACI,6BAAKc,EAAKX,QACV,4BAAIW,EAAKK,cACT,0CAAaL,EAAKM,QAClB,4CAAeN,EAAKF,UACpB,gCACI,wBAAQG,QAAS,kBAAMgB,EAAOjB,EAAKE,KAAnC,qBACA,wBAAQD,QAAS,kBAAMoB,EAAarB,EAAKE,KAAzC,2BACA,wBAAQD,QAAS,kBAAMmB,EAAOpB,EAAKE,KAAnC,wBAEJ,wBAAQhB,UAAU,MAAMe,QAAS,kBAAMV,EAAWS,EAAKE,KAAvD,uBAIR,kGCMOuB,MAvBf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAACD,EAAD,IACA,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAlB,SACE,sBAAKzC,UAAU,YAAf,UACE,cAAC,EAAD,CAAkBY,OAAO,QAAd,QACX,cAAC,EAAD,CAAwBA,OAAO,cAApB,cACX,cAAC,EAAD,CAAkBA,OAAO,QAAd,aAGf,cAAC,IAAD,CAAO6B,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,U,QCrBFC,EAAe,CAAC,CAClBvC,MAAO,mBACPgB,YAAa,0EACbP,OAAQ,OACRQ,KAAM,QACNJ,GAAI,GACN,CACEb,MAAO,mBACPgB,YAAa,0CACbP,OAAQ,OACRI,GAAI,GACN,CACEb,MAAO,uBACPgB,YAAa,0CACbP,OAAQ,OACRI,GAAI,GACN,CACEb,MAAO,mBACPgB,YAAa,8EACbP,OAAQ,aACRQ,KAAM,UACNJ,GAAI,I,YClBK2B,EAAQC,aDqBN,WAAmD,IAA9BlC,EAA6B,uDAArBgC,EAAcG,EAAO,uCAC7D,OAAOA,EAAOtC,MACV,IAAK,UACD,MACS,sBAAOG,GAAP,CAAamC,EAAOrC,UAGjC,IAAK,aACD,OACYE,EAAM2B,QAAO,SAAAS,GAAC,OAAIA,EAAE9B,KAAO6B,EAAOrC,WAGlD,IAAK,SACD,OACYE,EAAMG,KAAI,SAAAC,GAId,OAHGA,EAAKE,KAAO6B,EAAOrC,UAClBM,EAAKF,OAAS,QAEXE,KAInB,IAAK,eACD,OACYJ,EAAMG,KAAI,SAAAC,GAId,OAHGA,EAAKE,KAAO6B,EAAOrC,UAClBM,EAAKF,OAAS,cAEXE,KAInB,IAAK,SACD,OACYJ,EAAMG,KAAI,SAAAC,GAId,OAHGA,EAAKE,KAAO6B,EAAOrC,UAClBM,EAAKF,OAAS,QAEXE,KAInB,QACI,OAAOJ,KC9DfqC,OAAOC,8BACPD,OAAOC,gC,MCEXC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAMQ,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.131c851a.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\nexport default function Nav (){\n    return (\n        <div className=\"nav\">\n            <Link to='/'>Home</Link>\n            <Link to='/add'>Add ToDo</Link>\n        </div>\n    )\n}","\nexport default function Todo({thing}){\n    return (\n        <div>\n            {thing}\n        </div>\n    )\n}","let newId = 4;\n\nexport const addTodo = (data) => {\n    return ({\n        type: 'AddTodo',\n        payload: {\n            ...data,\n            status: 'Todo',\n            id: newId++\n        }\n    })\n}\nexport const removeTodo = (data) => {\n    return ({\n        type: 'RemoveTodo',\n        payload: data\n    })\n}\nexport const toInProgress = (data) => {\n    return ({\n        type: 'ToInProgress',\n        payload: data\n    })\n}\nexport const toDone = (data) => {\n    return ({\n        type: 'ToDone',\n        payload: data\n    })\n}\nexport const toTodo = (data) => {\n    console.log(typeof data);\n    return ({\n        type: 'ToTodo',\n        payload: data\n    })\n}","import { connect } from 'react-redux';\nimport { Link} from 'react-router-dom';\nimport Todo from './Todo';\nimport {removeTodo} from '../store/actions';\n\nfunction ToDos({status,todos,removeTodo}){\n    return(\n        <div className=\"todos\">\n            <span>{status}</span>\n            {todos.map(todo => {\n                if(todo.status === status){\n                    return (\n                        <div className=\"todo\" key={todo.id}>\n                            <button onClick={() => removeTodo(todo.id)}>X</button>\n                            <Link to={`/edit/${todo.id}`}>\n                                <Todo {...todo} />\n                            </Link>\n                        </div>\n                    )\n                }\n                return null;\n            })}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        todos: state\n    }\n}\n\nexport default connect(mapStateToProps,{removeTodo})(ToDos);","import { connect } from 'react-redux';\nimport {addTodo} from '../store/actions';\nimport {useState} from 'react';\n\nfunction AddTodo({addTodo}){\n    const [data,setData] = useState({\n        thing: \"\",\n        description: \"\",\n        date: \"\"\n    });\n    const handleChange = (e) => {\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTodo(data);\n        setData({\n            thing: \"\",\n            description: \"\",\n            date: \"\"\n        })\n    }\n\n    return (\n        <div className=\"add\">\n            <form onSubmit={handleSubmit}>\n                <label>Thing</label>\n                <input required name='thing' value={data.thing} onChange={handleChange}/>\n                <label>Description</label>\n                <textarea name='description' value={data.description} onChange={handleChange}/>\n                <label>Date</label>\n                <input name='date' value={data.date} onChange={handleChange}/>\n                <button type='submit'>Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default connect(null,{addTodo})(AddTodo)","import { connect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport {toTodo,toInProgress,toDone,removeTodo} from '../store/actions';\n\nfunction TodoDetail({todos,toTodo,toDone,toInProgress,removeTodo}){\n    let {id} = useParams();\n    let [todo] = todos.filter(todo => todo.id === Number(id));\n    if(todo){\n        return(\n            <div className=\"details\">\n                <h4>{todo.thing}</h4>\n                <p>{todo.description}</p>\n                <span>Date: {todo.date}</span>\n                <span>Status: {todo.status}</span>\n                <div>\n                    <button onClick={() => toTodo(todo.id)}>To Todo</button>\n                    <button onClick={() => toInProgress(todo.id)}>To InProgress</button>\n                    <button onClick={() => toDone(todo.id)}>To Done</button>\n                </div>\n                <button className=\"del\" onClick={() => removeTodo(todo.id)}>Delete</button>\n            </div>\n        )\n    } else return (\n        <div>\n            The ID you're searching for doesn't exists, or was deleted!!\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return ({\n        todos: state\n    })\n}\n\nexport default connect(mapStateToProps,{toTodo,toDone,toInProgress,removeTodo})(TodoDetail);","import Nav from './components/Nav';\nimport ToDos from './components/ToDos';\nimport AddTodo from './components/AddTodo';\nimport TodoDetail from './components/TodoDetail';\nimport {Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Route exact path='/'>\n        <div className=\"container\">\n          <ToDos key=\"todo\" status=\"Todo\"/>\n          <ToDos key=\"inProgress\" status=\"InProgress\"/>\n          <ToDos key=\"done\" status=\"Done\"/>\n        </div>\n      </Route>\n      <Route path='/add'>\n        <AddTodo />\n      </Route>\n      <Route path='/edit/:id'>\n        <TodoDetail/>\n      </Route>\n    </div>\n  );\n}\n\n\n\nexport default App;","const initialState = [{\n    thing: \"Try clicking me!\",\n    description: \"Welcome to the description! Here you can change the status of the todos\",\n    status: \"Todo\",\n    date: \"Today\",\n    id: 0\n},{\n    thing: \"Create this app!\",\n    description: \"Hello! Welcome to the awesome Todo app!\",\n    status: \"Done\",\n    id: 1\n},{\n    thing: \"Share it on LinkedIn\",\n    description: \"Hello! Welcome to the awesome Todo app!\",\n    status: \"Done\",\n    id: 2\n},{\n    thing: \"Search for a job\",\n    description: \"Hello! Im locking for a job actually, so if you are interested, contact me!\",\n    status: \"InProgress\",\n    date: \"25/7/21\",\n    id: 3\n}];\n\nexport default function rootReducer(state = initialState, action){\n    switch(action.type) {\n        case 'AddTodo': {\n            return (\n                state = [...state,action.payload]\n            )\n        }\n        case 'RemoveTodo': {\n            return (\n                state = state.filter(x => x.id !== action.payload)\n            )\n        }\n        case 'ToTodo': {\n            return (\n                state = state.map(todo => {\n                    if(todo.id === action.payload){\n                        todo.status = \"Todo\";\n                    }\n                    return todo;\n                })\n            )\n        }\n        case 'ToInProgress': {\n            return (\n                state = state.map(todo => {\n                    if(todo.id === action.payload){\n                        todo.status = 'InProgress';\n                    }\n                    return todo;\n                })\n            )\n        }\n        case 'ToDone': {\n            return (\n                state = state.map(todo => {\n                    if(todo.id === action.payload){\n                        todo.status = 'Done';\n                    }\n                    return todo;\n                })\n            )\n        }\n        default: {\n            return state;\n        }\n    }\n}","import rootReducer from './reducer';\nimport {createStore} from 'redux';\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './store'\nimport './styles.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>  \n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}